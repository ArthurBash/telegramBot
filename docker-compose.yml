# docker-compose.yml
version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: telegram_categorizer_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - telegram_network
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: telegram_categorizer_app
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./app:/app/app
      - ./categories.csv:/app/categories.csv
    ports:
      - "8000:8000"
    networks:
      - telegram_network
    restart: unless-stopped
    command: python -m app.main

volumes:
  postgres_data:
    driver: local

networks:
  telegram_network:
    driver: bridge